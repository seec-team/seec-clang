language: cpp

#
# We need a more recent version of GCC to build.
#
addons:
 apt:
   sources:
   - ubuntu-toolchain-r-test
   packages:
   - gcc-4.8
   - g++-4.8

before_install:
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi

# 
# LLVM needs a more recent version of CMake. This code comes from the following
# answer about installing an updated CMake:
#   http://stackoverflow.com/a/33203355
#
install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake
    fi

#
# Before we can build, we need to download the source code for the matching
# LLVM release, link SeeC-Clang's source into the correct directory, and then
# generate the build scripts using CMake.
#
before_script:
  - wget http://llvm.org/releases/3.8.0/llvm-3.8.0.src.tar.xz -O /tmp/llvm.tar.xz
  - cd ${TRAVIS_BUILD_DIR}
  - tar -xf /tmp/llvm.tar.xz
  - ln -s seec-team/seec-clang llvm-3.8.0.src/tools/clang
  - mkdir seec-build
  - cd seec-build
  - cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_EH=true -DLLVM_ENABLE_PIC=true -DLLVM_ENABLE_RTTI=true ${TRAVIS_BUILD_DIR}/llvm-3.8.0.src/

#
# Build using the makefiles previously generated by CMake.
#
script:
  - cd ${TRAVIS_BUILD_DIR}/seec-build
  - make

matrix:
  include:
    - os: linux
      compiler: clang
    - os: linux
      compiler: gcc
    - os: osx
      compiler: clang
